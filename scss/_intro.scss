#homepage-intro {
   height: calc(100vh - (#{$headerHeight} * 2));

   .intro-text {
      top: 15vmin;

      h1 {
         margin-bottom: 0;
      }

      h2 {
         margin-top: 0;
      }

      #intro-btn {
         display: inline-block;
         pointer-events: all;
         text-decoration: none;

         @include double-border-btn(50rem, $inv:true, $padding:0);

         span {
            margin-left: 1rem;
         }
      }

      #intro-arrow {
         fill: none;
         stroke: $fg;
         stroke-linecap: round;
         stroke-linejoin: round;
         stroke-width: 0.5px;
         display: inline-block;
         vertical-align: middle;
         height: 3rem - ($border * 2);
         width: 3rem - ($border * 2);
         padding: calc(#{$border} - 1px);

         circle {
            fill: $bg;
            stroke: none;
         }
      }
   }
}

#loading-mask {
   background: $bg;
   display: none;
   position: absolute;
   height: 100%;
   width: 100%;
   bottom: 0;
   left: 0;
   right: 0;
   top: 0;
   z-index: 99;
}

.intro {
   background: $bg;
   position: relative;
   overflow: hidden;

   .intro-text {
      position: absolute;
      left: 0;
      right: 0;
      margin: 0 auto;
      width: fit-content;
      color: $fg;
      padding: 0 $gutter;
      pointer-events: none;

      h1, h2 {
         pointer-events: all;
      }
   }
}

.terrain {
   display: block;
   position: absolute;
   bottom: 0;
   fill: $fg;
   max-width: 75vmin;
   pointer-events: none;
}

.terrain.left {
   left: 0;
}

.terrain.right {
   right: 0;
}

.tree {
   display: block;
   fill: none;
   stroke-linecap: round;
   stroke-linejoin: round;
   stroke-width: 1.2px;
   pointer-events: none;

   path:not(.trunk) {
      pointer-events: none;
   }
}

.tree path {
   pointer-events: visibleStroke;
}

@for $i from 1 through $layers {
   $scale: round((($i - 1) / ($layers - 1)) * ($layers - 1));
   $r: red($bg) + (((red($fg) - red($bg)) / $layers) * ($scale + 1));
   $g: green($bg) + (((green($fg) - green($bg)) / $layers) * ($scale + 1));
   $b: blue($bg) + (((blue($fg) - blue($bg)) / $layers) * ($scale + 1));
      
   .layer#{$i} > path {
      fill: rgb($r, $g, $b);
   }

   .layer#{$i} .tree {
      stroke: rgb($r, $g, $b);
      
      .trunk {
      fill: rgb($r, $g, $b);
      }
   }
}

@mixin intro--sm() {
   .intro .intro-text, #homepage-intro .intro-text #intro-btn {
      font-size: 3vmin;
   }

   #homepage-intro .intro-text {
      #intro-arrow {
         height: calc(12vmin - (#{$border} * 2));
         width: calc(12vmin - (#{$border} * 2));
      }
   }
}

@mixin intro--md($headerHeight, $gutter, $border) {
   #homepage-intro {
      height: calc(100vh - (#{$headerHeight} * 2));
   }

   .intro .intro-text {
      font-size: 1.5rem;
      padding: 0 $gutter;
   }

   #homepage-intro .intro-text {
      #intro-btn {
         @include double-border-btn(50rem, $border, $font-size:1.5rem, $inv:true, $padding:0);
      }

      #intro-arrow {
         height: 5rem - ($border * 2);
         width: 5rem - ($border * 2);
         padding: calc(#{$border} - 1px);
      }
   }
}