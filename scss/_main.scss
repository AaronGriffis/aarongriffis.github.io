* {
   box-sizing: border-box;
}

html {
   font-size: 16px;
}

body {
   background: $fg;
   color: $bg;
   margin: $header-height 0 0;
   font-family: $header-font;
   font-weight: $header-weight;
   line-height: 1.5;
   text-align: center;

   & > section {
      max-width: ($masonry-size * $max-columns) + ($gutter * ($max-columns + 1));
      margin: 0 auto;
      padding: 0 $gutter;

      &:before {
         content:"";
         display:block;
         height: $header-height;
         margin-top: -$header-height;
      }

      & > .flex-wrapper {
         margin: (-$gutter / 2);
         margin-bottom: 0;
      }

      & > h1 {
         display: flex;
         align-items: center;
         justify-content: center;
         font-size: 1.5rem;
         margin: 2rem 0;
         
         &:before, &:after {
            content: "";
            background: $bg;
            border-radius: 0.5rem;
            flex-grow: 1;
            height: $border;
            min-width: 3rem;
         }

         &:before {
            margin-right: 0.5rem;
         }

         &:after {
            margin-left: 0.5rem;
         }
      }

      h2 {
         font-size: 1.25rem;
      }
   }
}

p, input, textarea, li, figcaption {
   font: $body-weight 1rem $body-font;
}

figcaption {
   font-size: 1.125rem;
}

#vignette {
   fill: rgba(0, 0, 0, 0.33);
   position: fixed;
   width: 100vw;
   height: calc(100vh - #{$header-height});
   top: $header-height;
   bottom: 0;
   left: 0;
   right: 0;
   pointer-events: none;
   z-index: 1000;

   -webkit-backface-visibility:hidden;
   backface-visibility:hidden;
   transform: translateZ(0);
   will-change: transform;
}

@mixin main--sm() {
   body > section {
      & > h1 {
         font-size: calc(4vmin + 0.5rem);
      }

      h2 {
         font-size: calc(1vmin + 1rem);
      }
   }
}

@mixin main--md($header-height, $gutter, $border, $masonry-size) {
   body {
      margin: $header-height 0 0;

      & > section {
         max-width: ($masonry-size * $max-columns) + ($gutter * ($max-columns + 1));
         padding: 0 $gutter;
         
         &:before {
            content:"";
            display:block;
            height: $header-height;
            margin-top: -$header-height;
         }

         & > .flex-wrapper {
            margin: (-$gutter / 2);
            margin-bottom: 0;
         }
         
         & > h1 {
            font-size: 2.5rem;

            &:before, &:after {
               height: $border;
            }
         }
         
         h2 {
            font-size: 1.5rem;
         }
      }
   }

   #vignette {
      height: calc(100vh - #{$header-height});
      top: $header-height;
   }
}